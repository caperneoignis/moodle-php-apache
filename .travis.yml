language: bash
services: docker
env:
    # need to fix xdebug issue, by figuring out a way to pull it.
    - APACHE_WEB_ROOT=/var/www REPO=caperneoignis/moodle-php-apache XDEBUG=xdebug TAG=7.0_pandoc_xdebug
    - APACHE_WEB_ROOT=/var/www REPO=caperneoignis/moodle-php-apache TAG=7.0_pandoc XDEBUG=""
install:
    - docker build --build-arg XDEBUG=$XDEBUG -t $REPO .
before_script:
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
script:
    - docker run --name test0 -d -p 8000:80 -e XDEBUG=$XDEBUG -v $PWD/tests/fixtures:/var/www/html $REPO
    - docker exec test0 php /var/www/html/test.php
    - curl --fail http://127.0.0.1:8000/test.php
    #now run with environment variables, we should get the same type of test pass
    - docker run --name test1 -d -e XDEBUG=$XDEBUG -e APACHE_WEB_ROOT -p 8001:80 -v $PWD/tests/fixtures:/var/www $REPO
    - docker exec test1 php /var/www/test.php
    - curl --fail http://127.0.0.1:8001/test.php
    - VERSION=`docker exec test0 php -v | grep -Po '(?<=PHP )[^ ]+' | head -n1 | awk '{print $1;}'`
    - if [[ ${XDEBUG} != "" ]]; then docker tag $REPO $REPO:"${VERSION}_pandoc_${XDEBUG}"; else docker tag $REPO $REPO:"${VERSION}_pandoc"; fi
    - docker tag $REPO $REPO:$TAG
after_failure:
    - docker logs test0 && docker logs test1
after_success:
  - docker push $REPO;
after_script:
    - docker rm -f test0 test1
